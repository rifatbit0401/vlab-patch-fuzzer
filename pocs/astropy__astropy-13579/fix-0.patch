diff --git a/astropy/wcs/wcsapi/wrappers/sliced_wcs.py b/astropy/wcs/wcsapi/wrappers/sliced_wcs.py
index ecc3c31..e8cd66d 100644
--- a/astropy/wcs/wcsapi/wrappers/sliced_wcs.py
+++ b/astropy/wcs/wcsapi/wrappers/sliced_wcs.py
@@ -242,16 +242,29 @@ class SlicedLowLevelWCS(BaseWCSWrapper):
 
         return world_arrays
 
+
     def world_to_pixel_values(self, *world_arrays):
         world_arrays = tuple(map(np.asanyarray, world_arrays))
+        # Compute default world coordinates for dropped axes
+        fixed_pixel_values = []
+        for pix in self._slices_pixel:
+            if isinstance(pix, numbers.Integral):
+                fixed_pixel_values.append(pix)
+            else:
+                fixed_pixel_values.append(pix.start if pix.start is not None else 0)
+        fixed_pixel_values = tuple(fixed_pixel_values)
+        fixed_world = self._wcs.pixel_to_world_values(*fixed_pixel_values)
         world_arrays_new = []
+
+
         iworld_curr = -1
         for iworld in range(self._wcs.world_n_dim):
             if iworld in self._world_keep:
                 iworld_curr += 1
                 world_arrays_new.append(world_arrays[iworld_curr])
             else:
-                world_arrays_new.append(1.)
+                world_arrays_new.append(fixed_world[iworld])
+
 
         world_arrays_new = np.broadcast_arrays(*world_arrays_new)
         pixel_arrays = list(self._wcs.world_to_pixel_values(*world_arrays_new))
@@ -305,4 +318,4 @@ class SlicedLowLevelWCS(BaseWCSWrapper):
 
     @property
     def axis_correlation_matrix(self):
-        return self._wcs.axis_correlation_matrix[self._world_keep][:, self._pixel_keep]
+        return self._wcs.axis_correlation_matrix[self._world_keep][:, self._pixel_keep]

